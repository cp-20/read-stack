// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id          String   @id
  email       String   @unique
  name        String
  displayName String?
  avatarUrl   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  clips       clips[]
}

model clips {
  id        Int      @id @default(autoincrement())
  // 0: 未読, 1: 読み中, 2: 読了
  status    Int      @default(0)
  progress  Int      @default(0)
  comment   String?
  article   article  @relation(fields: [articleId], references: [id])
  articleId Int      @map("articleId")
  author    users    @relation(fields: [authorId], references: [id])
  authorId  String   @map("userId")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([articleId, authorId])
}

model article {
  id         Int          @id @default(autoincrement())
  url        String       @unique
  title      String
  body       String
  ogImageUrl String?
  tags       tag[]
  summary    String?
  createdAt  DateTime     @default(now())
  clips      clips[]
  referFrom  articleRef[] @relation("referFrom")
  referTo    articleRef[] @relation("referTo")
}

model articleRef {
  referFrom   article  @relation(fields: [referFromId], references: [id], name: "referFrom")
  referFromId Int
  referTo     article  @relation(fields: [referToId], references: [id], name: "referTo")
  referToId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@id([referFromId, referToId])
}

model tag {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  article   article @relation(fields: [articleId], references: [id])
  articleId Int
}
